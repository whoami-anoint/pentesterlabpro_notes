Authentication 04

To remediate the previous issue, the developer decided to use a case sensitive comparison during users' creation. This check can also be bypassed based on the way MySQL performs string comparison: MySQL ignores trailing spaces (i.e.: pentesterlab and pentesterlab[space] are equals). Using the same method as above, you should be able to pretend to be logged in as the user admin.

* A good way to prevent this issue is to tell the database that the username is a PRIMARY KEY. This method is, for example, used in Tomcat documentation to use a SQL backend as a Realm. 


Common Mistakes:

    If the user 'admin[space]' exists, you can add more spaces after 'admin'


You can access this exercise using the following URL: http://ptc-bf669568-c66bcc75.libcurl.so/. 

Steps: 
 1) Visit the given link: http://ptc-70f25c92-79f4cff1.libcurl.so/
 2) Register with admin but it don't worked. Then register with any of your username and password. The objective of this exercise is to find a way to get logged in as the user "admin"...
 3) Let's try to register with admin with space in username and any of your password. 
 4) Boom!! You are currently logged in as admin! The key for this exercise is ce54d493-5913-4bd3-83b7-9d956508264b. 

 Some knowledge: 
Select * FROM users where username='admin'; 
(This is the case when you login in an admin. But unfortunately we don't have password of admin user.However, for a lot of databases depending on how this column is defined, this will return exactly the same results.
Having 'admin' and 'admin ' will return same result. If we manage to create with space at the end, we may end up being logged in as a first username
existing is the database. If any of these users doesn't have the space at the end. And this is how you can bypass the authentication in this example.

 Happy Hacking !! :) 
 