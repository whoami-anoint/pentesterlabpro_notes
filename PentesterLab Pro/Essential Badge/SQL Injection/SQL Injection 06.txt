SQL Injection 06

This example was first published in 2006 on Chris Shiflett's Blog as a way to bypass addslashes.
 It relies on the way MySQL will perform escaping. It will depend on the charset used by the connection. 
 If the database driver is not aware of the charset used it will not perform the right escaping and create an exploitable situation. 
 This exploit relies on the usage of GBK. GBK is a character set for simplified Chinese. 
 Using the fact that the database driver and the database don't "talk" the same charset, it's possible to generate a single quote and break out of the SQL syntax to inject a payload.

Using the string \xBF' (URL-encoded as %bf%27), it's possible to get a single quote that will not get escaped properly. It's therefore possible to inject an always-true condition using %bf%27 or 1=1 -- and bypass the authentication.

As a side note, this issue can be remediated by setting up the connection encoding to 'GBK' instead of using an SQL query (which is the source of this issue). Here the problem comes from the execution of the following query:

SET CHARACTER SET 'GBK';

Blog: https://shiflett.org/blog/2006/addslashes-versus-mysql-real-escape-string
About GBK encoding: https://en.wikipedia.org/wiki/GBK_(character_encoding)

It is a pretty unlikely issue for a web application but it's always good to know that it exists, especially if you play CTFs.

 You can access this exercise using the following URL: http://ptc-ba05e9a6-3a2cbc0c.libcurl.so/.
 You can also use the TLS version if you're experiencing timeouts due to network filtering: https://ptl-ba05e9a6-3a2cbc0c.libcurl.so/. 

 Steps: 
    1) Visit the given URL: http://ptc-ba05e9a6-3a2cbc0c.libcurl.so/. And we'll get login page.
    2) Fill the credentials admin:admin. 
    3) Intercept the process while login the page. And send to the repeater. We'll can see :
            --->  username=admin&password=admin
    4) We are using special character %bf%27 as it looks:
            username=admin%bf%27&password=admin
            Then we can see syntax error on response side.
    5) Now add some sql injection to inject:
        +or+1=1+--+ 
        ---> username=admin%bf%27+or+1=1+--+&password=admin

    6) We can get 302 in response. Simply we can use "show response in browser' or 'follow redirection' to get the response.
    7) Bravo!! We are currently logged in! The key for this exercise is d784c245-f61b-4c33-bbd1-d2fdb9203cbf.

        Happy Hacking!! :)