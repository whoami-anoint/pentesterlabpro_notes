XSS 01

The first vulnerable example is just here to get you started with what is going on when you find a XSS. Using the basic payload, you should be able to get an alert box.

Once you send your payload, you should get something like:

XSS alert

Image: https://assets.pentesterlab.com/web_for_pentester/xss-alert.png

Make sure that you check the source code of the HTML page to see that the 
information you sent as part of the request is echoed back without any HTML encoding.

 To finish this exercise, you need to trigger a pop-up (alert or confirm) with your UUID (dd19b1aa-7a48-4881-87ce-4fd3f96516f8) 
 as argument <script>alert('dd19b1aa-7a48-4881-87ce-4fd3f96516f8')</script>. 

  You can access this exercise using the following URL: http://ptl-0fb2363b-9f518718.libcurl.st/. 

  Steps: 
        1) Visit the given url: http://ptl-0fb2363b-9f518718.libcurl.st/. 
        2) We can see 'click here' on this page. Go through the link. 
            And we'll be redirected to: http://ptl-0fb2363b-9f518718.libcurl.st/index.php?name=hacker
        3) Try to test with adding lol in parameter as:
            http://ptl-0fb2363b-9f518718.libcurl.st/index.php?name=hackerlol
            Look it reflected.
        4) Now use a XSS payload: <script>alert(1)</script>
            Suddenly, 1 is pop up on the browser.
        5) Let's use our given xss payload: 
            We need to trigger a pop-up (alert or confirm) with your UUID (dd19b1aa-7a48-4881-87ce-4fd3f96516f8) as argument
             <script>alert('dd19b1aa-7a48-4881-87ce-4fd3f96516f8')</script>.
                And it forms as:
                http://ptl-0fb2363b-9f518718.libcurl.st/index.php?name=<script>alert('dd19b1aa-7a48-4881-87ce-4fd3f96516f8')</script>
        6) It pop-out and submit the url.
        7) Bravo!! We solved the challenge.

        Happy Hacking!! :) 